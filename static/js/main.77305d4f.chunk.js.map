{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["axios","require","config","App","useState","data","setData","isLoading","setIsLoading","url","process","useEffect","a","get","response","console","log","error","fetchData","className","Object","keys","map","x","i","Transactions","item","target","rel","href","hash","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iQAGMA,EAAQC,EAAQ,IACtBA,EAAQ,IAAUC,SAsEHC,MApEf,WAAgB,IAAD,EACaC,mBAAS,IADtB,mBACJC,EADI,KACEC,EADF,OAEuBF,oBAAS,GAFhC,mBAEJG,EAFI,KAEOC,EAFP,KAILC,EAAMC,8BAoBZ,OAlBAC,qBAAU,YACS,uCAAG,4BAAAC,EAAA,6DACdJ,GAAa,GADC,kBAIiBR,EAAMa,IAAN,UAAaJ,EAAb,kBAJjB,OAIAK,EAJA,OAKNC,QAAQC,IAAIF,GACZR,EAAQQ,EAAST,MACjBG,GAAa,GAPP,kDASNO,QAAQE,MAAR,MACAT,GAAa,GAVP,0DAAH,qDAcfU,KACD,CAACT,IAGA,8BACI,yBAAQU,UAAU,aAAlB,UACI,uCAECZ,EACG,8CAEA,6BACKa,OAAOC,KAAKhB,EAAK,IAAIiB,KAAI,SAACC,EAAGC,GAAJ,OACtB,4BACW,cAAND,EAAA,UACQA,EADR,aACclB,EAAK,GAAGkB,IACjB,YAOtB,8CACChB,EACG,8CAEA,6BACKF,EAAK,GAAGoB,aAAaH,KAAI,SAACI,GAAD,OACtB,4BACI,mBACIP,UAAU,WACVQ,OAAO,SACPC,IAAI,sBACJC,KAAI,yCAAoCH,EAAKI,MAJjD,SAMKJ,EAAKI,QAPNJ,EAAKI,iBC1C1BC,EAdS,SAACC,GACjBA,GAAeA,aAAuBC,UACtC,6BAAqBC,MACjB,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC/BJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFxBQ,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,SAM5Bb,M","file":"static/js/main.77305d4f.chunk.js","sourcesContent":["// import logo from './logo.svg';\nimport { useEffect, useState } from 'react'\nimport './App.css'\nconst axios = require('axios')\nrequire('dotenv').config()\n\nfunction App() {\n    const [data, setData] = useState({})\n    const [isLoading, setIsLoading] = useState(true)\n\n    const url = process.env.REACT_APP_BASE_URL\n\n    useEffect(() => {\n        const fetchData = async () => {\n            setIsLoading(true)\n            if (url) {\n                try {\n                    const response = await axios.get(`${url}/block/latest`)\n                    console.log(response)\n                    setData(response.data)\n                    setIsLoading(false)\n                } catch (error) {\n                    console.error(error)\n                    setIsLoading(false)\n                }\n            }\n        }\n        fetchData()\n    }, [url])\n\n    return (\n        <div>\n            <header className=\"App-header\">\n                <h3>Block</h3>\n\n                {isLoading ? (\n                    <div>Loading ...</div>\n                ) : (\n                    <ul>\n                        {Object.keys(data[0]).map((x, i) => (\n                            <p>\n                                {x !== 'logsBloom'\n                                    ? `${x}: ${data[0][x]}`\n                                    : null}\n                                {/* {x}: {data[0][x]} */}\n                            </p>\n                        ))}\n                    </ul>\n                )}\n\n                <h3>Transactions</h3>\n                {isLoading ? (\n                    <div>Loading ...</div>\n                ) : (\n                    <ul>\n                        {data[1].Transactions.map((item) => (\n                            <p key={item.hash}>\n                                <a\n                                    className=\"App-link\"\n                                    target=\"_blank\"\n                                    rel=\"noopener noreferrer\"\n                                    href={`https://explorer.aquacha.in/tx/${item.hash}`}\n                                >\n                                    {item.hash}\n                                </a>\n                            </p>\n                        ))}\n                    </ul>\n                )}\n            </header>\n        </div>\n    )\n}\n\nexport default App\n","const reportWebVitals = (onPerfEntry) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(\n            ({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n                getCLS(onPerfEntry)\n                getFID(onPerfEntry)\n                getFCP(onPerfEntry)\n                getLCP(onPerfEntry)\n                getTTFB(onPerfEntry)\n            }\n        )\n    }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}